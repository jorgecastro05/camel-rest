<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:marvel.properties"/>

    <bean id="marvelUtil" class="com.redhat.gpe.training.camel.MarvelUtil">
        <property name="apiKey" value="${apiKey}"/>
        <property name="privateKey" value="${privateKey}"/>
    </bean>

    <!-- Define a traditional camel context here -->
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="marvel" location="classpath:marvel.properties"/>

        <dataFormats>
            <json library="Jackson" unmarshalTypeName="com.redhat.gpe.training.camel.model.Record" id="json-marvel"/>
        </dataFormats>

        <!-- From File to direct:call-marvel -->
        <route id="call-marvel">
            <from uri="file:/data/marvel?noop=true&amp;delete=true&amp;moveFailed=../failed"/>
            <convertBodyTo type="java.lang.String"/>
            <split>
                <tokenize trim="true" token=","/>
                <setHeader headerName="hash">
                    <method ref="marvelUtil" method="hash"/>
                </setHeader>
                <setHeader headerName="ts">
                    <method ref="marvelUtil" method="getTs"/>
                </setHeader>
                <setHeader headerName="marvelID">
                    <simple trim="true">${body}</simple>
                </setHeader>
                <setHeader headerName="CamelHttpQuery">
                    <simple>hash=${header.hash}&amp;apikey=${properties:apiKey}&amp;ts=${header.ts}</simple>
                </setHeader>
                <setHeader headerName="CamelHttpUri">
                    <simple>http://gateway.marvel.com/v1/public/characters/${headers.marvelID}</simple>
                </setHeader>
                <setHeader headerName="CamelHttpMethod">
                    <simple>GET</simple>
                </setHeader>
                <to uri="direct:call-marvel"/>
            </split>
        </route>

        <!-- Call Marvel REST API -->
        <route id="http-marvel">
            <from uri="direct:call-marvel"/>
            <to uri="http:invokeMarvelRequest"/>
            <unmarshal ref="json-marvel"/>
            <log message="* * * RECORD - ${header.CamelSplitIndex} * * *"/>
            <log message="Name : ${body.data.results[0].name}"/>
            <log message="Description : ${body.data.results[0].description}"/>
            <log message="Thumbnail : ${body.data.results[0].thumbnail.path}"/>
            <log message="Comics available : ${body.data.results[0].comics.available}"/>
            <removeHeaders pattern=".*Http.*"/>
            <setBody>
                <simple>null</simple>
            </setBody>
        </route>

    </camelContext>

</beans>
